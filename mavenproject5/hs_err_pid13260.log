#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (malloc) failed to allocate 32744 bytes for ChunkPool::allocate
# Possible reasons:
#   The system is out of physical RAM or swap space
#   The process is running with CompressedOops enabled, and the Java Heap may be blocking the growth of the native heap
# Possible solutions:
#   Reduce memory load on the system
#   Increase physical memory or swap space
#   Check if swap backing store is full
#   Decrease Java heap size (-Xmx/-Xms)
#   Decrease number of Java threads
#   Decrease Java thread stack sizes (-Xss)
#   Set larger code cache with -XX:ReservedCodeCacheSize=
#   JVM is running with Unscaled Compressed Oops mode in which the Java heap is
#     placed in the first 4GB address space. The Java Heap base address is the
#     maximum limit for the native heap growth. Please use -XX:HeapBaseMinAddress
#     to set the Java Heap base and to place the Java Heap above 4GB virtual address.
# This output file may be truncated or incomplete.
#
#  Out of Memory Error (./open/src/hotspot/share/memory/arena.cpp:79), pid=13260, tid=4704
#
# JRE version: Java(TM) SE Runtime Environment (15.0.2+7) (build 15.0.2+7-27)
# Java VM: Java HotSpot(TM) 64-Bit Server VM (15.0.2+7-27, mixed mode, sharing, tiered, compressed oops, g1 gc, windows-amd64)
# No core dump will be written. Minidumps are not enabled by default on client versions of Windows
#

---------------  S U M M A R Y ------------

Command Line: project5.mavenproject5.login

Host: Intel(R) Core(TM) i7-8565U CPU @ 1.80GHz, 8 cores, 7G,  Windows 10 , 64 bit Build 19041 (10.0.19041.1348)
Time: Tue Nov 30 17:40:46 2021 Jerusalem Standard Time elapsed time: 0.325136 seconds (0d 0h 0m 0s)

---------------  T H R E A D  ---------------

Current thread (0x0000024271041560):  JavaThread "C2 CompilerThread0" daemon [_thread_in_native, id=4704, stack(0x0000005880500000,0x0000005880600000)]


Current CompileTask:
C2:    325  532       4       java.lang.StringLatin1::replace (198 bytes)

Stack: [0x0000005880500000,0x0000005880600000]
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
